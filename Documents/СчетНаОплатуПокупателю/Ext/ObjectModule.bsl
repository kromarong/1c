///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий


Процедура ЗаполнитьПоОснованию(ОснованиеС) Экспорт
	
	
Организация=ОснованиеС.Организация;
Ответственный=ОснованиеС.Эксперт;
Эксперт=ОснованиеС.Эксперт;
//Контрагент=ОснованиеС.Контрагент;
Контрагент=?(значениезаполнено(ОснованиеС.Плательщик),ОснованиеС.Плательщик,ОснованиеС.Контрагент);
Основание=ОснованиеС;
//КонечныйПолучатель=ОснованиеС.КонечныйПолучатель;
КонечныйПолучатель=ОснованиеС.Контрагент;
//Договор=ОснованиеС.Договор;
Договор=?(значениезаполнено(ОснованиеС.ДоговорПлательщика),ОснованиеС.ДоговорПлательщика,ОснованиеС.Договор);

КонецПроцедуры



Процедура СкопироватьТовары(Основание) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Услуга КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Цена,
	|	РеализацияТоваровУслугТовары.Сумма,
	|	РеализацияТоваровУслугТовары.Всего,
	|	РеализацияТоваровУслугТовары.ДопИнформацияПоУслуге,
	|	РеализацияТоваровУслугТовары.НДС КАК СуммаНДС,
	|	РеализацияТоваровУслугТовары.Количество
	|ИЗ
	|	Документ.Заявка.Услуги КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка";
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//ОснованиеСуммаВключаетНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "СуммаВключаетНДС");
	//Если ОснованиеСуммаВключаетНДС <> СуммаВключаетНДС Тогда
		//Для каждого СтрокаТЧ Из Товары Цикл
		//	СтрокаТЧ.Сумма = СтрокаТЧ.Сумма + ?(СуммаВключаетНДС, СтрокаТЧ.СуммаНДС, -СтрокаТЧ.СуммаНДС);
		//	Если СтрокаТЧ.Количество = 0 Тогда
		//		СтрокаТЧ.Цена = 0;
		//	Иначе
		//		СтрокаТЧ.Цена = СтрокаТЧ.Сумма / СтрокаТЧ.Количество;
		//	КонецЕсли;
		//КонецЦикла;
	//КонецЕсли;

КонецПроцедуры




Процедура ЗаполнитьПоДокументуОснованию(Основание) Экспорт

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.Заявка") Тогда

		// Заполним реквизиты шапки по документу основанию.
		//АдресДоставки = Основание.АдресДоставки;
		ЗаполнитьПоОснованию(Основание);

		//// Заполним табличные части
		СкопироватьТовары(Основание);
     КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	
	ИначеЕсли ДанныеЗаполнения = Неопределено Тогда // Ввод нового.
		ЭкспертизаИСертификация.ПриВводеНовогоЗаполнитьОрганизацию(ЭтотОбъект);
		Ответственный = Пользователи.ТекущийПользователь();
		Эксперт = Пользователи.ТекущийПользователь();
		
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	если сокрлп(Пользователи.текущийпользователь())<>сокрлп(Эксперт) и 
		//сокрлп(Пользователи.текущийпользователь())<>"Администратор"
		не РольДоступна(Метаданные.Роли.ПолныеПрава) 
		тогда 
		Отказ=истина;
	конецесли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	если сокрлп(Пользователи.текущийпользователь())<>сокрлп(Эксперт) и 
		 //сокрлп(Пользователи.текущийпользователь())<>"Администратор"
		 не РольДоступна(Метаданные.Роли.ПолныеПрава)  
		тогда 
	Отказ=истина;
	конецесли;

	
КонецПроцедуры


#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли