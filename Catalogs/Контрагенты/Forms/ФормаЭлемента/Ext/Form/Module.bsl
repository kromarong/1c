
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	// 		если   Объект.Ссылка.Пустая()
	//	 и сокрлп(Пользователи.текущийпользователь())<>"Администратор" 
	//	 и  ЭкспертизаИСертификация.Получитьиндексф(Пользователи.текущийпользователь())=""
	//	тогда 
	//Отказ=истина;
	//конецесли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан("Справочник.Контрагенты", ЭтотОбъект);
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ИсключаемыеВиды = Новый Массив;
	//ИсключаемыеВиды.Добавить(УправлениеКонтактнойИнформацией.ВидКонтактнойИнформацииПоИмени("АдресКонтрагента"));
	//ИсключаемыеВиды.Добавить(УправлениеКонтактнойИнформацией.ВидКонтактнойИнформацииПоИмени("mailКонтрагента"));
	//ИсключаемыеВиды.Добавить(УправлениеКонтактнойИнформацией.ВидКонтактнойИнформацииПоИмени("SkypeКонтрагенты"));
	
	
	
	
	ДополнительныеПараметрыКонтактнойИнформации = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ДополнительныеПараметрыКонтактнойИнформации.ОтложеннаяИнициализация = Истина;
	ДополнительныеПараметрыКонтактнойИнформации.ИсключаемыеВиды = ИсключаемыеВиды;
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, ДополнительныеПараметрыКонтактнойИнформации);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		ВыравниваниеЭлементовИЗаголовков = ВариантВыравниванияЭлементовИЗаголовков.ЭлементыПравоЗаголовкиЛево;
		Элементы.СтраницаОсновные.ВыравниваниеЭлементовИЗаголовков = ВариантВыравниванияЭлементовИЗаголовков.ЭлементыПравоЗаголовкиЛево;
	КонецЕсли;
	
	если значениезаполнено(объект.НаименованиеПолное) тогда
	элементы.НаименованиеПолное.Доступность=ложь;	
	КонецЕсли;
	если значениезаполнено(объект.Наименование) тогда
	элементы.Наименование.Доступность=ложь;	
	КонецЕсли;
	
	объект.ИзменитьНаим=ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	

	
	
КонецПроцедуры

//&НаКлиенте
//функция ПослеЗакрытияВопроса(Результат, Параметры)


//    Если Результат = КодВозвратаДиалога.Нет Тогда
//        Возврат ложь;
//	иначе	
//		Возврат истина;
//    КонецЕсли;
//	
//конецфункции	

////&НаКлиенте
//&НаСервере
//функция ответ ()

//Режим = РежимДиалогаВопрос.ДаНет;
//Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
//ПоказатьВопрос(Оповещение, НСтр("ru = 'Существует контрагент стакими ИНН, продолжить выполнение операции?';"
//    + " en = 'Do you want to continue?'"), Режим, 0);
////...


//	
//конецфункции	
	
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	
	// 		если    сокрлп(Пользователи.текущийпользователь())<>"Администратор" 
	//	 и  ЭкспертизаИСертификация.Получитьиндексф(Пользователи.текущийпользователь())=""
	//	тогда 
	//Отказ=истина;
	//конецесли;
	
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	 если   ТекущийОбъект.ИНН<>"" и ТекущийОбъект.КПП <>""   тогда
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.ИНН КАК ИНН,
	|	Контрагенты.КПП КАК КПП,
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И Контрагенты.КПП = &КПП
	|	И Контрагенты.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("ИНН", ТекущийОбъект.ИНН);
	Запрос.УстановитьПараметр("КПП", ТекущийОбъект.КПП);
	Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() тогда
		сообщить("Существует контрагент с такими ИНН и КПП, не будет записан! "+Выборка.Ссылка.Наименование+" "+Выборка.Ссылка.Код);
		отказ=истина;	
	Конецесли;
	Конецесли;
	
КонецПроцедуры


&НаСервере
функция ответ (ИНН,СС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.ИНН КАК ИНН,
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И Контрагенты.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("Ссылка", СС);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() тогда
		возврат истина;	
	иначе
		
		 возврат ложь;
	Конецесли;
	
	
конецфункции	



&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	если ответ (объект.ИНН,объект.Ссылка)   тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(НСтр("ru = 'Существует контрагент с таким ИНН, Продолжить выполнение операции?';"
		+ " en = 'Do you want to continue?'"), Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ =истина;
		КонецЕсли;
		
	Конецесли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись__Контрагенты", Новый Структура, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
		
	// СтандартныеПодсистемы.КонтактнаяИнформация
	Если ЭтотОбъект.ПараметрыКонтактнойИнформации.Свойство(ТекущаяСтраница.Имя)
		И НЕ ЭтотОбъект.ПараметрыКонтактнойИнформации[ТекущаяСтраница.Имя].ВыполненаОтложеннаяИнициализация Тогда
		
		КонтактнаяИнформацияПриСменеСтраницы();
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКонтрагентаПриИзменении(Элемент)
	
	ЭтоЮридическоеЛицо = Объект.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
	Если НЕ ЭтоЮридическоеЛицо Тогда
		Объект.КПП = "";
	КонецЕсли;

	ТекстСообщения=ЭкспертизаИСертификация.ИННСоответствуетТребованиям(СокрЛП(Объект.ИНН), ЭтоЮридическоеЛицо); 
	 
	 если  не   ТекстСообщения="" тогда
	 Объект.ИНН="";
	 сообщить(ТекстСообщения);
	 конецесли;
	
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура СтранаРегистрацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.СтранаМираОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти




#Область СлужебныеПроцедурыИФункции


// СтандартныеПодсистемы.КонтактнаяИнформация
// Демонстрируется устаревший способ внедрения подсистемы "Контактная информация".
// АПК:78-выкл экспортная серверная процедура используется для демонстрации устаревшего способа внедрения подсистемы.

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка, ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

&НаСервере
Процедура КонтактнаяИнформацияПриСменеСтраницы()
	УправлениеКонтактнойИнформацией.ВыполнитьОтложеннуюИнициализацию(ЭтотОбъект, Объект);
КонецПроцедуры

// АПК:78-вкл
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

// СтандартныеПодсистемы.ПодключаемыеКоманды
// Демонстрируется устаревший способ внедрения подсистемы "Подключаемые команды".
// АПК:78-выкл экспортная серверная процедура используется для демонстрации устаревшего способа внедрения подсистемы.

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	если СокрЛП(Объект.ВидКонтрагента)="Юридическое лицо" тогда
	ЭтоЮридическоеЛицо=истина;
	иначе
	ЭтоЮридическоеЛицо=ложь;
    конецесли;
	
	ТекстСообщения=ЭкспертизаИСертификация.ИННСоответствуетТребованиям(СокрЛП(Объект.ИНН), ЭтоЮридическоеЛицо); 
	 
	 если не   ТекстСообщения="" тогда
	 Объект.ИНН="";
	 сообщить(ТекстСообщения);
	 конецесли;
	 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоИНННаСервере()
	
	СДК = ЭкспертизаИСертификация.ТехПоддержка(объект.ИНН);
	
	Если СДК<>""тогда
		Если СДК.ОписаниеОшибки=""тогда
			
			если  СДК.ИП  тогда 
				объект.ВидКонтрагента=перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
			иначе
				объект.ВидКонтрагента=перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;   
			конецесли;   
			
			
			 объект_НаименованиеПолное=объект.НаименованиеПолное;
			 объект_Наименование=объект.Наименование;
			 СДК_НаименованиеПолное=СДК.НаименованиеПолное;
			 СДК_Наименование=СДК.Наименование;
			 
			 
			если не сокрлп(объект_НаименованиеПолное)="" и не сокрлп(объект_Наименование)="" тогда 
			если не сокрлп(объект_НаименованиеПолное)=сокрлп(СДК_НаименованиеПолное) или не сокрлп(объект_Наименование)=сокрлп(СДК_Наименование) тогда
			стртч=объект.ИсторияНаименований.Добавить();
			//стртч.ДоДаты=началогода(добавитьмесяц(текущаядата(),-84));
			стртч.ДоДаты=текущаядата();
			стртч.НаименованиеПолное=объект_НаименованиеПолное;
			стртч.Наименование=объект_Наименование;
			конецесли;	
			конецесли;	
				
			объект.НаименованиеПолное=СДК_НаименованиеПолное;
			объект.Наименование=СДК_Наименование;
			
			объект.КПП=СДК.КПП;
			
			объект.ОКВЭД=СДК.ОКВЭД;
			объект.ОГРН=СДК.РегистрационныйНомер;
			
			объект.ДолжностьЗаказчика=СДК.Должность;
			объект.ФИОЗаказчика=СДК.Руководитель;
			
			стрк=объект.КонтактнаяИнформация.Добавить();
			стрк.тип=Перечисления.ТипыКонтактнойИнформации.Адрес;
			стрк.вид=Справочники.ВидыКонтактнойИнформации.АдресКонтрагента;
			стрк.Представление=СДК.ЮридическийАдрес;
			
		иначе
			
			сообщить(СДК.ОписаниеОшибки);
			
		Конецесли;
	иначе
		
		сообщить("Нет данных");
	Конецесли;
   
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоИНН(Команда)
	ЗаполнитьПоИНННаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНаимПриИзменении(Элемент)
	
	//ЭкспертизаИСертификация.КонтрИзменитьНаимПриИзменении(объект.Ссылка,объект.ИзменитьНаим);
	
	если объект.ИзменитьНаим тогда
		
		Добавить=истина;
		
		если не сокрлп(объект.НаименованиеПолное)="" и не сокрлп(объект.Наименование)="" тогда 
			
			для каждого стртч0 из  объект.ИсторияНаименований цикл
				если стртч0.НаименованиеПолное=объект.НаименованиеПолное и  стртч0.Наименование=объект.Наименование тогда
					Добавить=ложь;	
					прервать;	
				конецесли;	
			конеццикла;
			
			если Добавить тогда
				стртч=объект.ИсторияНаименований.Добавить();
				стртч.ДоДаты=текущаядата();
				стртч.НаименованиеПолное=объект.НаименованиеПолное;
				стртч.Наименование=объект.Наименование;
			конецесли;
			
		конецесли;
		
		элементы.НаименованиеПолное.Доступность=истина;	
		элементы.Наименование.Доступность=истина;
		
	иначе
		
		Удалить=ложь;
		
		для каждого стртч0 из  объект.ИсторияНаименований цикл
			если стртч0.НаименованиеПолное=объект.НаименованиеПолное и  стртч0.Наименование=объект.Наименование тогда
				Удалить=истина;
				УдалитьИндекс=объект.ИсторияНаименований.Индекс(стртч0);
				прервать;	
			конецесли;	
		конеццикла;
		
		если Удалить тогда
			объект.ИсторияНаименований.Удалить(УдалитьИндекс);
		конецесли;
		
		элементы.НаименованиеПолное.Доступность=ложь;	
		элементы.Наименование.Доступность=ложь;	
		
	конецесли;
	
КонецПроцедуры




// АПК:78-вкл
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти
