///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// 		если   Объект.Ссылка.Пустая()
	//	 и сокрлп(Пользователи.текущийпользователь())<>"Администратор"  и сокрлп(Пользователи.текущийпользователь())<>"Смоленко И"
	//	тогда 
	//Отказ=истина;
	//конецесли;
	
	// Установка значения реквизита АдресКартинки.
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		//Если Не Объект.ФайлКартинки.Пустая() Тогда
		//	АдресКартинки = ПолучитьНавигационнуюСсылкуКартинки(Объект.ФайлКартинки, УникальныйИдентификатор)
		//Иначе
		//	АдресКартинки = "";
		//КонецЕсли;
	КонецЕсли;
	
		
	
	//// СтандартныеПодсистемы.РаботаСФайлами
	//ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	//ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	//
	//ПараметрыПоля = РаботаСФайлами.ПолеФайла();
	//ПараметрыПоля.Размещение  = "ГруппаКартинка";
	//ПараметрыПоля.ПутьКДанным = "Объект.ФайлКартинки";
	//ПараметрыПоля.ПутьКДаннымИзображения = "АдресКартинки";
	//
	//ДобавляемыеЭлементы = Новый Массив;
	//ДобавляемыеЭлементы.Добавить(ПараметрыГиперссылки);
	//ДобавляемыеЭлементы.Добавить(ПараметрыПоля);
	//
	//РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ДобавляемыеЭлементы);
	//// Конец СтандартныеПодсистемы.РаботаСФайлами
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	   если  не ЭкспертизаИСертификация.РольДоступна_Метаданные_Роли_ПолныеПрава()  тогда
		элементы.УчитыватьНДС.Доступность=Ложь;
		элементы.НДСВСумме.Доступность=Ложь;
		конецесли;
		
	//// СтандартныеПодсистемы.РаботаСФайлами
	//РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	//// Конец СтандартныеПодсистемы.РаботаСФайлами
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
		
	//// СтандартныеПодсистемы.РаботаСФайлами
	//РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	//// Конец СтандартныеПодсистемы.РаботаСФайлами
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	//Если Не ТекущийОбъект.ФайлКартинки.Пустая() Тогда
	//	АдресКартинки = ПолучитьНавигационнуюСсылкуКартинки(ТекущийОбъект.ФайлКартинки, УникальныйИдентификатор)
	//Иначе
	//	АдресКартинки = "";
	//КонецЕсли;
	//
	//ЗаписанныйВидНоменклатуры = ТекущийОбъект.ВидНоменклатуры;
	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// 	если   
	//	 сокрлп(Пользователи.текущийпользователь())<>"Администратор"  и сокрлп(Пользователи.текущийпользователь())<>"Смоленко И"
	//	тогда 
	//Отказ=истина;
	//конецесли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//ЗаписанныйВидНоменклатуры = ТекущийОбъект.ВидНоменклатуры;
	
	//// СтандартныеПодсистемы.РаботаСФайлами
	//РаботаСФайлами.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	//// Конец СтандартныеПодсистемы.РаботаСФайлами
	
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
		
КонецПроцедуры

&НаКлиенте
Процедура СтранаПроисхожденияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформациейКлиент.СтранаМираОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
		
КонецПроцедуры

//// СтандартныеПодсистемы.РаботаСФайлами
//&НаКлиенте
//Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
//	
//	РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
//	
//	РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,
//				ПараметрыПеретаскивания, СтандартнаяОбработка);
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
//	
//	РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,
//				ПараметрыПеретаскивания, СтандартнаяОбработка);
//	
//КонецПроцедуры
//// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#Область ОбработчикиКомандФормы




// СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

&НаКлиенте
Процедура ЗагрузкаИзФайла(Команда)
	
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "Номенклатура.Аналоги";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка списка аналогов из файла'");
	
	// Описание колонок для макета загрузки комплектации.
	ПараметрыЗагрузки.КолонкиМакета = ОписаниеКолонокМакетаДляЗагрузкиАналогов();
	ПараметрыЗагрузки.ДополнительныеПараметры = Новый Структура("ВидНоменклатуры", Объект.ВидНоменклатуры);
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьАналогиИзФайлаЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);

КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

//// СтандартныеПодсистемы.РаботаСФайлами
//&НаКлиенте
//Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)

//	РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);

//КонецПроцедуры
//// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьНавигационнуюСсылкуКартинки(ФайлКартинки, ИдентификаторФормы)
	
	Попытка
		
		ПараметрыФайла = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
		ПараметрыФайла.ИдентификаторФормы = ИдентификаторФормы;
		ПараметрыФайла.ВызыватьИсключение = Ложь;
		Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ПараметрыФайла).СсылкаНаДвоичныеДанныеФайла;
		
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции


// СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

&НаСервере
Функция ОписаниеКолонокМакетаДляЗагрузкиАналогов()
	
	КолонкиМакета = ЗагрузкаДанныхИзФайла.СформироватьОписаниеКолонок(Объект.Аналоги);
	ЗагрузкаДанныхИзФайлаКлиентСервер.УдалитьКолонкуМакета("Аналог", КолонкиМакета);
	
	Если Объект.ВидНоменклатуры.Наименование = "Услуга" Тогда
		// У услуг нет штрихкода
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета("ШтрихкодАртикул", ОбщегоНазначения.ОписаниеТипаСтрока(20), НСтр("ru = 'Артикул'"));
	Иначе
		Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета("ШтрихкодАртикул", ОбщегоНазначения.ОписаниеТипаСтрока(20), НСтр("ru = 'Штрихкод и Артикул'"));
	КонецЕсли;
	Колонка.ОбязательнаДляЗаполнения = Истина;
	Колонка.Позиция = 1;
	Колонка.Группа = "Номенклатура";
	Колонка.Родитель = "Аналог";
	КолонкиМакета.Добавить(Колонка);
	
	Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	Колонка.Группа = "Номенклатура";
	Колонка.Родитель = "Аналог";
	Колонка.Позиция = 2;
	КолонкиМакета.Добавить(Колонка);
	
	Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.КолонкаМакета("Совместимость", КолонкиМакета);
	Колонка.Позиция = 3;
	
	Возврат КолонкиМакета;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьАналогиИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьАналогиИзФайлаНаСервере(АдресЗагруженныхДанных);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьАналогиИзФайлаНаСервере(АдресЗагруженныхДанных)

	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	ТоварыДобавлены = Ложь;
	
	Для каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Аналог) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаТовары = Объект.Аналоги.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, СтрокаТаблицы);
		ТоварыДобавлены = Истина;
	КонецЦикла;
	
	Если ТоварыДобавлены Тогда
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла



#КонецОбласти